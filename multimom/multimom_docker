#!/bin/bash

function usage() {
	echo "syntax: $0 <create> [jobuser] [num-moms] [num-cpus-per-mom]"
	echo "syntax: $0 <remove>"
}

if [ $# -lt 1 ]; then
	usage
	exit 1
fi

if [ "$1" = "create" ]; then
	if [ $# -lt 4 ]; then
		usage
		exit 1
	fi
	jobuser=$2
	num=$3
	cpus=$4
	echo "Creating $num containers/moms each with $cpus cores and adding user $jobuser"
	echo "================================================================================="
elif [ "$1" = "remove" ]; then
	if [ $# -ne 1 ]; then
		usage
		exit 1
	fi
else
	usage
	exit 1
fi


_shost=$(hostname -s)
_sm=$(pwd)/start_mom

containers=`docker ps -a | grep pbsmom | awk '{print $1}'`
if [ ! -z "${containers}" ]; then
	echo "Removing existing containers..."
	docker stop `docker ps -a | grep pbsmom | awk '{print $1}'`
	docker rm `docker ps -a | grep pbsmom | awk '{print $1}'`
fi

echo "Deleting existing nodes..."
/opt/pbs/bin/qmgr -c "d n @default" > /dev/null 2>&1

if [ "$1" = "remove" ]; then
	echo "Done"
	exit 0
fi

docker build . --build-arg JOBUSER=$jobuser -t pbs:mom

for i in $(seq 1 1 $num)
do
	_port=$((18000 + (i * 2)))
	echo "Creating mom container at ${_shost} ${_port} with name pbsmom_$i"
	docker run -dit --privileged --net=host -v /opt/pbs:/opt/pbs -v ${_sm}:/start_mom --name pbsmom_$i --entrypoint /start_mom pbs:mom ${_shost} ${_port}
	echo ""
	/opt/pbs/bin/qmgr -c "c n mom-${i} mom=${_shost},port=${_port}"
	/opt/pbs/bin/qmgr -c "s n mom-${i} resources_available.ncpus = $cpus"
done
echo "Done"
