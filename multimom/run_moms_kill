#!/usr/bin/sh

if [ $# -lt 4 ]
then
	echo "Usage is: $0 <kill-pid> <start> <end> <port no.> [thrds]"
	exit 
fi

kpid=$1
last=$3
first=$2
port=$4
routers=""

if [ $# -eq 5 ]; then
	thrds=$5
fi

. /etc/pbs.conf

ulimit -n 10000
ulimit -c unlimited

pbs_home=$PBS_HOME
pbs_newhome=`dirname $pbs_home`
if [ -z "$pbs_newhome" ]; then 
	echo "Could not detect new home"
	exit 1
fi

if [ ! -d "$pbs_newhome" ]; then 
	echo "$pbs_newhome is not a directory"
	exit 1
fi

if [ "$pbs_newhome" = "/" ]; then
	echo "pbs_newhome resolves to /. Cannot work"
	exit 1
fi


create_dirs=1
if [ ! -z "$GLOBAL_ITER" ]; then
	if [ $GLOBAL_ITER -gt 1 ]; then
		create_dirs=0
	fi
fi


if [ $create_dirs -eq 1 ]; then
	n=$first
	l=$last

	echo creating mom directories..
	while [ $n -le $l ]
	do
		mkdir $pbs_newhome/mom$n
		cp -r -p $pbs_home/aux $pbs_newhome/mom$n
		cp -r -p $pbs_home/checkpoint $pbs_newhome/mom$n
		cp -r -p $pbs_home/mom_logs $pbs_newhome/mom$n
		cp -r -p $pbs_home/pbs_environment $pbs_newhome/mom$n
		cp -r -p $pbs_home/mom_priv $pbs_newhome/mom$n
		cp -r -p $pbs_home/spool $pbs_newhome/mom$n
		cat /etc/pbs.conf > $pbs_newhome/mom$n/pbs.conf
		n=`expr $n + 1`
	done

	n=$first
	l=$last
	port=$4

	echo editing pbs.conf file and mom_priv/config..
	while [ $n -le $l ]
	do
		mom_home=$pbs_newhome/mom$n
		conf_file=$mom_home/pbs.conf
		mom_conf=$mom_home/mom_priv/config

		if [ ! -f "$conf_file" ]; then
			echo "File $conf_file missing"
			exit 1
		fi

		if [ ! -f "$mom_conf" ]; then
			echo "File $mom_conf missing"
			exit 1
		fi

		echo "PBS_MOM_SERVICE_PORT=$port" >> $conf_file
		echo "PBS_MANAGER_SERVICE_PORT=`expr $port + 1`" >> $conf_file
		echo "PBS_HOME=$mom_home" >> $conf_file
		if [ ! -z "${routers}" ]; then
			echo "PBS_LEAF_ROUTERS=${routers}" >> $conf_file
		fi

		port=`expr $port + 5`
		n=`expr $n + 1`
	done
fi

n=$first
l=$last
killed=0
post_kill=0
port=$4
iters=`expr $l - $n`
if [ $iters -eq 0 ]; then
	iters=1
fi
RANDOM=`cat /dev/urandom | od -N 2 -t u2 -A n | tr -d " "`
echo "RANDOM=$RANDOM"

kl=0
if [ $RANDOM -gt 30000 ]; then
	kl=`expr $RANDOM % $iters`
	st=`expr $RANDOM % 20`
	left=`expr $iters - $kl`
	if [ $st -gt $left ]; then
		st=`expr $RANDOM % $left`	
	fi
fi

while [ $n -le $l ]
do
	mgr_port=`expr $port + 1`
	PBS_CONF_FILE=$pbs_newhome/mom$n/pbs.conf $PBS_EXEC/sbin/pbs_mom > out$n 2>&1  &
	#PBS_CONF_FILE=$pbs_newhome/mom$n/pbs.conf valgrind --log-file=val$n.log $PBS_EXEC/sbin/pbs_mom > out$n 2>&1  &
	n=`expr $n + 1`
	port=`expr $port + 5`

	if [ $kl -gt 0 ]; then
		if [ $n -eq $kl ]; then
			if [ $kpid -gt 0 ]; then
				echo "kILLING PBS_COMM WITH PID = $kpid"
				kill -9 $kpid > /dev/null 2>&1
				if [ $? -eq 0 ]; then
					killed=1
					while :
					do
						kpid=`cat ${PBS_HOME}/server_priv/comm.lock`
						ps $kpid > /dev/null 2>&1
						if [ $? -ne 0 ]; then
							break
						fi
						echo "Waiting for comm to exit"
						sleep 1
					done

				else
					echo "Failed to kill pbs_comm"
				fi
				kl=0
			fi
		fi
	fi
	if [ $killed -eq 1 ]; then
		post_kill=`expr $post_kill + 1`
		if [ $post_kill -gt $st ]; then
			killed=0
			echo "******** STARTED new PBS_COMM"
			ulimit -c unlimited
			ulimit -n 30000

			if [ ! -z "$thrds" ]; then
				#valgrind --log-file=comm.vallog.$$ pbs_comm -t $thrds > comm.out.$$ 2>&1 &
				pbs_comm -t $thrds > comm.out.$$ 2>&1 &
			else
				pbs_comm > comm.out 2>&1 &
			fi
			while :
			do
				kpid=`cat ${PBS_HOME}/server_priv/comm.lock`
				ps $kpid > /dev/null 2>&1
				if [ $? -eq 0 ]; then
					echo "New comm pid=$kpid"
					break
				fi
				echo "Waiting for comm.."
				sleep 1
			done
		fi
	fi
done

echo "Started $l moms"
